首先安装：
sudo apt-get install git
或下载windows版

在本地仓库目录：
git init

跟踪文件
git add README.md

git commit -m "first commit"
"first commit"注释


git status 查看仓库状态
如果有文件被修改过，git diff file查看修改内容

提交都是两步：
git add
git commit

查看提交历史：
git log
查看命令历史：
git reflog
简化查看提交历史的信息：
git log --pretty=oneline
其中 commit id 是 sha1 算出来的数字
可以用可视化工具查看


HEAD 当前版本
HEAD^ 上一个版本
HEAD^^ 上上一个版本
HEAD~100 上100个版本
格式：
git reset --hard commit_id
git reset --hard HEAD^ 回到上一个版本
git reset --hard 3628164 回到指定版本（版本号不用写全）
git reflog 记录每一次命令，可以看到commit id（版本号）

add时已经更新暂存区stage
暂存区的东西才是要commit的
有了暂存区的概念：
（1）才不至于把所有文件都commit，可以选择性commit；
（2）购物车概念，可以checkout单独还原某个文件（还原到暂存区里的版本）
git diff    #是工作区(work dict)和暂存区(stage)的比较
git diff --cached    #是暂存区(stage)和分支(master)的比较
git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别

连接远程github
git remote add origin https://github.com/<your_username>/Demo.git
允许 GitHub.com 和 Git 仓库交互时使用 origin 这个名称而不是完整的 Git 地址

git push -u origin master
-------------------------------------------
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
自报家门
--global全局配置，但还是可以对某一项单独指定配置

好像 -m 支持全角符号？还会自动不全引号（如果不小心没有打全引号）。
git commit -m “添加测试文件”
